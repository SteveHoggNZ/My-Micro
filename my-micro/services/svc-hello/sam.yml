AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: >-
  Hello World Service
Parameters:
  CodeDeliveryNameParameter:
    Type: String
    Default: my-cd
    AllowedPattern: '^[a-z][a-z0-9-]*$'
    ConstraintDescription: 'Must be only include lowercase letters and - and must start with a letter'
    MinLength: 4
    MaxLength: 20
    Description: The name for the Continuous Delivery resources
  ProjectNameParameter:
    Type: String
    AllowedPattern: '^[a-z][a-z0-9-]*$'
    ConstraintDescription: 'Must be only include lowercase letters and - and must start with a letter'
    MinLength: 4
    MaxLength: 20
    Description: The name for the project
  ServiceNameParameter:
    Type: String
    AllowedPattern: '^[a-z][a-z0-9-]*$'
    ConstraintDescription: 'Must be only include lowercase letters and - and must start with a letter'
    MinLength: 4
    MaxLength: 20
    Description: The name for the service
  VersionParameter:
    Type: String
    AllowedPattern: '^[0-9.]*$'
    ConstraintDescription: 'Must be numbers and . only'
    MinLength: 3
    MaxLength: 20
    Description: The version for the service
  EnvironmentParameter:
    Type: String
    AllowedValues:
      - dev
      - test
      - prod
    Description: Enter dev, test or prod. Default is test
Resources:
  HelloNZ:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: !Sub '${AWS::StackName}-HelloNZ'
      Handler: index.hello_nz
      Runtime: nodejs6.10
      CodeUri: .
      Description: >-
        !Ref VersionParameter
      MemorySize: 128
      Timeout: 5
      Role: !GetAtt LambdaRole.Arn
      Events:
        GetResource:
          Type: Api
          Properties:
            Path: /hello/nz
            Method: get
  HelloWorld:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: !Sub '${AWS::StackName}-HelloWorld'
      Handler: index.hello_world
      Runtime: nodejs6.10
      CodeUri: .
      Description: >-
        !Ref VersionParameter
      MemorySize: 128
      Timeout: 5
      Role: !GetAtt LambdaRole.Arn
  HelloUniverse:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: !Sub '${AWS::StackName}-HelloUniverse'
      Handler: index.hello_Universe
      Runtime: nodejs6.10
      CodeUri: .
      Description: >-
        !Ref VersionParameter
      MemorySize: 128
      Timeout: 5
      Role: !GetAtt LambdaRole.Arn
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: CodeBuildPermissions
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - "arn:aws:logs:*:*:*"
  Pipeline:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      Parameters:
        CodeDeliveryNameParameter: !Ref CodeDeliveryNameParameter
        ProjectNameParameter: !Ref ProjectNameParameter
        ServiceNameParameter: !Ref ServiceNameParameter
        VersionParameter: !Ref VersionParameter
        EnvironmentParameter: !Ref EnvironmentParameter
      TemplateURL: ./common/pipelines/SAM-blue-green-with-IAM.cf.yml
      TimeoutInMinutes: 2
