AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  Project infrastructure
Parameters:
  ProjectNameParameter:
    Type: String
    AllowedPattern: '^[a-z][a-z0-9-]*$'
    ConstraintDescription: 'Must be only include lowercase letters and - and must start with a letter'
    MinLength: 4
    MaxLength: 20
    Description: The name for the project
  SvcUrlParameter:
    Type: String
    Description: The source version control URL (GitHub)
Resources:
  # ==== S3 Bucket for source code extraction ====
  S3Src:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
  # ==== CodeBuild that extracts source code from Git to an S3 archive based upon push tag value ====
  CodeBuildExtract:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${AWS::StackName}-extract"
      ServiceRole: !Ref "CodeBuildRole"
      Environment:
        ComputeType: "BUILD_GENERAL1_SMALL"
        Image: "aws/codebuild/nodejs:7.0.0"
        Type: "LINUX_CONTAINER"
        EnvironmentVariables:
          -
            Name: BUILD_ACTION
            Value: extract
      Source:
        Type: "GITHUB"
        Location: !Ref "SvcUrlParameter"
        BuildSpec: "version: 0.1\n\nphases:\n  build:\n    commands:\n      - bash -x scripts/cd-extract-to-s3.sh\n\nartifacts:\n  files:\n    - queue/**/*\n"
      Artifacts:
        Type: "S3"
        Location: !Ref S3Src
        Name: "build"
      TimeoutInMinutes: 5
  # ==== CodePipeline Role for use by each services' CodePipeline
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        -
          # The default policy CodePipeline generates. It appears very liberal!
          PolicyName: CodePipelinePermissions
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
                Resource:
                  - "*"
              -
                Effect: Allow
                Action:
                  - s3:PutObject
                Resource:
                  - "arn:aws:s3:::codepipeline*"
                  - "arn:aws:s3:::elasticbeanstalk*"
              -
                Effect: Allow
                Action:
                  - codecommit:CancelUploadArchive
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:UploadArchive
                Resource:
                  - "*"
              -
                Effect: Allow
                Action:
                  - codedeploy:CreateDeployment
                  - codedeploy:GetApplicationRevision
                  - codedeploy:GetDeployment
                  - codedeploy:GetDeploymentConfig
                  - codedeploy:RegisterApplicationRevision
                Resource:
                  - "*"
              -
                Effect: Allow
                Action:
                  - elasticbeanstalk:*
                  - ec2:*
                  - elasticloadbalancing:*
                  - autoscaling:*
                  - cloudwatch:*
                  - s3:*
                  - sns:*
                  - cloudformation:*
                  - rds:*
                  - sqs:*
                  - ecs:*
                  - iam:PassRole
                Resource:
                  - "*"
              -
                Effect: Allow
                Action:
                  - lambda:InvokeFunction
                  - lambda:ListFunctions
                Resource:
                  - "*"
              -
                Effect: Allow
                Action:
                  - opsworks:CreateDeployment
                  - opsworks:DescribeApps
                  - opsworks:DescribeCommands
                  - opsworks:DescribeDeployments
                  - opsworks:DescribeInstances
                  - opsworks:DescribeStacks
                  - opsworks:UpdateApp
                  - opsworks:UpdateStack
                Resource:
                  - "*"
              -
                Effect: Allow
                Action:
                  - cloudformation:CreateStack
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeStacks
                  - cloudformation:UpdateStack
                  - cloudformation:CreateChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DescribeChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:SetStackPolicy
                  - cloudformation:ValidateTemplate
                  - iam:PassRole
                Resource:
                  - "*"
              -
                Effect: Allow
                Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Resource:
                  - "*"
  # ==== CodeBuildRole Role for use by each CodeBuild instance ====
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
          - # Allow users in the same account to assume the role for debugging
            Effect: Allow
            Principal:
              AWS:
                # - Fn::Join:
                #   - ""
                #   - - "arn:aws:iam::"
                #     - Ref: "AWS::AccountId"
                #     - ":root"
                - !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        -
          PolicyName: CodeBuildPermissions
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                Resource:
                  - "arn:aws:s3:::codepipeline-ap-southeast-2-*"
              -
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - Fn::Join:
                    - ""
                    - - "arn:aws:logs:ap-southeast-2:"
                      - Ref: "AWS::AccountId"
                      - ":log-group:/aws/codebuild/*"
                  - Fn::Join:
                    - ""
                    - - "arn:aws:logs:ap-southeast-2:"
                      - Ref: "AWS::AccountId"
                      - ":log-group:/aws/codebuild/*:*"
        -
          PolicyName: ServerlessDeployPermissions
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: Allow
                Action:
                  - cloudformation:DescribeStackResources
                  - cloudformation:CreateStack
                  - cloudformation:DescribeStackEvents
                  - cloudformation:DescribeStackResource
                  - cloudformation:UpdateStack
                  - cloudformation:DescribeStacks
                  - cloudformation:DeleteStack
                Resource:
                  - Fn::Join:
                    - ""
                    - - "arn:aws:cloudformation:*:*:stack/"
                      - Ref: ProjectNameParameter
                      - "-*"
              -
                Effect: Allow
                Action:
                  - cloudformation:ListImports
                Resource: "*"
              -
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                  - s3:DeleteObject
                  - s3:CreateBucket
                  - s3:DeleteBucket
                  - s3:ListBucket
                  - s3:ListBucketVersions
                  - s3:ListAllMyBuckets
                  - s3:GetBucketVersioning
                  - s3:PutBucketVersioning
                  - s3:GetBucketLocation
                  - s3:PutBucketPolicy
                  - s3:GetBucketWebsite
                  - s3:PutBucketWebsite
                  - s3:DeleteBucketWebsite
                Resource:
                  - Fn::Join:
                    - ""
                    - - "arn:aws:s3:::"
                      - Ref: ProjectNameParameter
                      - "-*-serverlessdeployment*"
                  - Fn::Join:
                    - ""
                    - - "arn:aws:s3:::"
                      - Ref: S3Src
                  - Fn::Join:
                    - ""
                    - - "arn:aws:s3:::"
                      - Ref: S3Src
                      - "/*"
              -
                Effect: Allow
                Action:
                  - lambda:GetFunction
                  - lambda:CreateFunction
                  - lambda:DeleteFunction
                  - lambda:UpdateFunctionConfiguration
                  - lambda:UpdateFunctionCode
                  - lambda:ListVersionsByFunction
                  - lambda:PublishVersion
                  - lambda:CreateAlias
                  - lambda:DeleteAlias
                  - lambda:UpdateAlias
                  - lambda:GetFunctionConfiguration
                  - lambda:ListTags
                  - lambda:TagResource
                  - lambda:UntagResource
                Resource:
                  - Fn::Join:
                    - ""
                    - - "arn:aws:lambda:*:*:function:"
                      - Ref: ProjectNameParameter
                      - "-*"
              -
                Effect: Allow
                Action:
                  - lambda:ListTags
                  - lambda:TagResource
                  - lambda:UntagResource
                Resource: "*"
              # To Do: restrict access further
              -
                Effect: Allow
                Action:
                  - apigateway:GET
                  - apigateway:HEAD
                  - apigateway:OPTIONS
                  - apigateway:PATCH
                  - apigateway:POST
                  - apigateway:PUT
                  - apigateway:DELETE
                Resource:
                  - "arn:aws:apigateway:*::/restapis"
                  - "arn:aws:apigateway:*::/restapis/*"
              -
                Effect: Allow
                Action:
                  - logs:Describe*
                Resource:
                  - "*"
              # End To Do: restrict access further
              -
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:DeleteLogGroup
                Resource:
                  - Fn::Join:
                    - ""
                    - - "arn:aws:logs::"
                      - Ref: "AWS::AccountId"
                      - ":log-group:/aws/lambda/"
                      - Ref: ProjectNameParameter
                      - "-*:*"
              -
                Effect: Allow
                Action:
                  - iam:CreateRole
                  - iam:DeleteRole
                  - iam:GetRole
                  - iam:PassRole
                  - iam:DeleteRolePolicy
                  - iam:PutRolePolicy
                Resource:
                  - Fn::Join:
                    - ""
                    - - "arn:aws:iam::"
                      - Ref: "AWS::AccountId"
                      - ":role/"
                      - Ref: ProjectNameParameter
                      - "-*-lambdaRole"
        -
          PolicyName: ServerlessPipelinePermissions
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: Allow
                Action:
                  - codepipeline:UpdatePipeline
                Resource:
                  - Fn::Join:
                    - ""
                    - - "arn:aws:codepipeline:ap-southeast-2:"
                      - Ref: "AWS::AccountId"
                      - ":"
                      - Ref: ProjectNameParameter
                      - "*"
                  # - Fn::Join:
                  #   - ""
                  #   - - "arn:aws:codepipeline::"
                  #     - Ref: "AWS::AccountId"
                  #     - ":"
                  #     - Ref: ProjectNameParameter
                  #     - "*"
              -
                Effect: Allow
                Action:
                  - iam:PassRole
                Resource:
                  - !GetAtt CodePipelineRole.Arn
  LambdaBasicExecutionPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      ManagedPolicyName: !Sub ${AWS::StackName}-LambdaBasicExecutionPolicy
      Description: Basic execution policy for Lambda functions
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource:
              - "arn:aws:logs:*:*:*"
  LambdaCodeBuildPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      ManagedPolicyName: !Sub ${AWS::StackName}-LambdaCodeBuildPolicy
      Description: Policy to allow start of CodeBuild jobs for Lambda functions
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: Allow
            Action:
              - codebuild:StartBuild
            Resource:
              - !Sub 'arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${AWS::StackName}-extract'
  LambdaCodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - !Ref LambdaBasicExecutionPolicy
        - !Ref LambdaCodeBuildPolicy
Outputs:
  CodePipelineRoleArn:
    Value: !GetAtt CodePipelineRole.Arn
  CodeBuildRoleArn:
    Value: !GetAtt CodeBuildRole.Arn
  CodeBuildExtractArn:
    Value: !GetAtt CodeBuildExtract.Arn
  S3Src:
    Description: A queue for storing source code to be built
    Value: !Ref S3Src
  LambdaCodeBuildRoleArn:
    Value: !GetAtt LambdaCodeBuildRole.Arn
    Export:
      Name: !Sub ${AWS::StackName}-LambdaCodeBuildRoleArn
  LambdaBasicExecutionPolicy:
    Description: Policy allowing log writes
    Value: !Ref LambdaBasicExecutionPolicy
  LambdaCodeBuildPolicy:
    Description: Policy allowing CodeBuild starts
    Value: !Ref LambdaCodeBuildPolicy
